local Gui = Instance.new("ScreenGui", game.CoreGui)
Gui.Name = "BloxFruit_TabGUI"
Gui.ResetOnSpawn = false
Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Toggle Button (G√≥c tr√°i)
local ToggleBtn = Instance.new("ImageButton", Gui)
ToggleBtn.Size = UDim2.new(0, 40, 0, 40)
ToggleBtn.Position = UDim2.new(0, 10, 0, 10)
ToggleBtn.Image = "rbxassetid://76955883171909"
ToggleBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
ToggleBtn.BackgroundTransparency = 0
ToggleBtn.AutoButtonColor = true
Instance.new("UICorner", ToggleBtn).CornerRadius = UDim.new(0, 6)

-- Main UI Frame
local MainFrame = Instance.new("Frame", Gui)
MainFrame.Size = UDim2.new(0, 580, 0, 360)
MainFrame.Position = UDim2.new(0.5, -290, 0.5, -180)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = false
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 10)

-- Logo
local Logo = Instance.new("ImageLabel", MainFrame)
Logo.Size = UDim2.new(0, 30, 0, 30)
Logo.Position = UDim2.new(0, 10, 0, 5)
Logo.BackgroundTransparency = 1
Logo.Image = "rbxassetid://76955883171909"

-- Tab Scroll (Top)
local TabScroll = Instance.new("ScrollingFrame", MainFrame)
TabScroll.Size = UDim2.new(1, -40, 0, 40)
TabScroll.Position = UDim2.new(0, 40, 0, 5)
TabScroll.BackgroundTransparency = 1
TabScroll.ScrollBarThickness = 2
TabScroll.CanvasSize = UDim2.new(0, 800, 0, 0)
TabScroll.AutomaticCanvasSize = Enum.AutomaticSize.X

local TabLayout = Instance.new("UIListLayout", TabScroll)
TabLayout.FillDirection = Enum.FillDirection.Horizontal
TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabLayout.Padding = UDim.new(0, 5)

-- Tab names
local Tabs = {
    "Tab Status", "Tab General", "Quest & Item",
    "Race & Gear", "Tab Shop", "Tab Setting", "Mic"
}
local TabFrames = {}

for _, tabName in ipairs(Tabs) do
    local TabBtn = Instance.new("TextButton", TabScroll)
    TabBtn.Size = UDim2.new(0, 100, 1, 0)
    TabBtn.Text = tabName
    TabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TabBtn.Font = Enum.Font.GothamBold
    TabBtn.TextSize = 13
    Instance.new("UICorner", TabBtn).CornerRadius = UDim.new(0, 8)

    local Content = Instance.new("ScrollingFrame", MainFrame)
    Content.Size = UDim2.new(1, -20, 1, -50)
    Content.Position = UDim2.new(0, 10, 0, 45)
    Content.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Content.Visible = false
    Content.CanvasSize = UDim2.new(0, 0, 0, 600)
    Content.ScrollBarThickness = 5
    Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

    TabFrames[tabName] = Content

    TabBtn.MouseButton1Click:Connect(function()
        for _, f in pairs(TabFrames) do f.Visible = false end
        Content.Visible = true
    end)
end
TabFrames["Tab Status"].Visible = true

-- Toggle Show/Hide GUI
ToggleBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

------------------------
-- TAB STATUS CONTENT --
------------------------

local StatusTab = TabFrames["Tab Status"]
local StatusLayout = Instance.new("UIListLayout", StatusTab)
StatusLayout.Padding = UDim.new(0, 5)

local function makeLabel(parent, text)
    local lbl = Instance.new("TextLabel", parent)
    lbl.Size = UDim2.new(1, -10, 0, 30)
    lbl.BackgroundTransparency = 1
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.fromRGB(255, 255, 255)
    lbl.Text = text
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    return lbl
end

local Title = makeLabel(StatusTab, "üõ∞Ô∏è Status Checking")
Title.TextXAlignment = Enum.TextXAlignment.Center

local BossStatus = makeLabel(StatusTab, "Boss Spawn: Checking...")
local FruitStatus = makeLabel(StatusTab, "Fruit Spawn: Checking...")
local PlayerStatus = makeLabel(StatusTab, "Player Count: 0")
local TimeStatus = makeLabel(StatusTab, "Server Time: 0s")
local MoonStatus = makeLabel(StatusTab, "Moon: Checking...")

-- Th·ªùi gian ·ªü server
local startTime = tick()
game:GetService("RunService").RenderStepped:Connect(function()
    local t = math.floor(tick() - startTime)
    TimeStatus.Text = "Server Time: " .. t .. "s"
end)

-- Moon Phase check
local moonEmoji = {
    Real = {"üåò","üåó","üåñ","üåï"},
    Fake = {"üåí","üåì","üåñ","üåë"}
}
local function getMoon()
    local moon = game.Lighting:GetMoonPhase()
    local isReal = moon == Enum.MoonPhase.FullMoon
    local emoji = isReal and moonEmoji.Real[4] or moonEmoji.Fake[4]
    return "Moon: " .. emoji
end

-- Loop update boss/fruit/moon/player
task.spawn(function()
    while true do
        local found = {}
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("Model") then
                if v.Name:lower():find("shanks") then found[#found+1] = "Shanks ‚úÖ"
                elseif v.Name:lower():find("whitebeard") then found[#found+1] = "Whitebeard ‚úÖ"
                elseif v.Name:lower():find("saw") then found[#found+1] = "The Saw ‚úÖ" end
            end
        end
        if #found == 0 then
            BossStatus.Text = "Boss Spawn: ‚ùå"
        else
            BossStatus.Text = "Boss Spawn: " .. table.concat(found, ", ")
        end

        -- Fruit check
        local fruitFound = "‚ùå"
        for _, v in pairs(game.Workspace:GetChildren()) do
            if v.Name:lower():find("fruit") then
                fruitFound = v.Name .. " ‚úÖ"
            end
        end
        FruitStatus.Text = "Fruit Spawn: " .. fruitFound
        PlayerStatus.Text = "Player Count: " .. tostring(#game.Players:GetPlayers())
        MoonStatus.Text = getMoon()

        wait(120)
    end
end)

-------------------------
-- TAB GENERAL CONTENT --
-------------------------

local GeneralTab = TabFrames["Tab General"]

-- Chia ƒë√¥i giao di·ªán
local LeftScroll = Instance.new("ScrollingFrame", GeneralTab)
LeftScroll.Size = UDim2.new(0.5, -10, 1, 0)
LeftScroll.Position = UDim2.new(0, 0, 0, 0)
LeftScroll.CanvasSize = UDim2.new(0, 0, 0, 600)
LeftScroll.ScrollBarThickness = 4
LeftScroll.BackgroundTransparency = 1
Instance.new("UIListLayout", LeftScroll).Padding = UDim.new(0, 8)

local RightScroll = Instance.new("ScrollingFrame", GeneralTab)
RightScroll.Size = UDim2.new(0.5, -10, 1, 0)
RightScroll.Position = UDim2.new(0.5, 10, 0, 0)
RightScroll.CanvasSize = UDim2.new(0, 0, 0, 600)
RightScroll.ScrollBarThickness = 4
RightScroll.BackgroundTransparency = 1
Instance.new("UIListLayout", RightScroll).Padding = UDim.new(0, 8)

-- Toggle
local function createToggleButton(parent, title, callback)
	local Frame = Instance.new("Frame", parent)
	Frame.Size = UDim2.new(1, -10, 0, 40)
	Frame.BackgroundTransparency = 1

	local TextLabel = Instance.new("TextLabel", Frame)
	TextLabel.Size = UDim2.new(0.8, 0, 1, 0)
	TextLabel.Text = title
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Font = Enum.Font.GothamBold
	TextLabel.TextSize = 14
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	local Status = Instance.new("ImageLabel", Frame)
	Status.Size = UDim2.new(0, 24, 0, 24)
	Status.Position = UDim2.new(0.9, 0, 0.5, -12)
	Status.BackgroundTransparency = 1
	Status.Image = "rbxassetid://6031094664"

	local Toggle = false
	Frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			Toggle = not Toggle
			Status.Image = Toggle and "rbxassetid://6031094690" or "rbxassetid://6031094664"
			if callback then callback(Toggle) end
		end
	end)
end

-- Toggle auto farm
createToggleButton(LeftScroll, "Level Farm", function(state)
	getgenv().AutoFarmEnabled = state
end)

-- Weapon Select
local SelectedWeapon = "Nothing"
local DropDownBtn = Instance.new("TextButton", LeftScroll)
DropDownBtn.Size = UDim2.new(1, -10, 0, 40)
DropDownBtn.Text = "Select Weapon: " .. SelectedWeapon
DropDownBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
DropDownBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DropDownBtn.Font = Enum.Font.GothamBold
DropDownBtn.TextSize = 13
Instance.new("UICorner", DropDownBtn).CornerRadius = UDim.new(0, 8)

local WeaponOptions = Instance.new("Frame", DropDownBtn)
WeaponOptions.Size = UDim2.new(1, 0, 0, 100)
WeaponOptions.Position = UDim2.new(0, 0, 1, 0)
WeaponOptions.Visible = false
WeaponOptions.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Instance.new("UICorner", WeaponOptions).CornerRadius = UDim.new(0, 8)

local ScrollList = Instance.new("ScrollingFrame", WeaponOptions)
ScrollList.Size = UDim2.new(1, 0, 1, 0)
ScrollList.CanvasSize = UDim2.new(0, 0, 0, 400)
ScrollList.ScrollBarThickness = 3
ScrollList.BackgroundTransparency = 1
local ListLayout = Instance.new("UIListLayout", ScrollList)
ListLayout.Padding = UDim.new(0, 3)

local WeaponList = {
    -- Melee (Fighting Styles)
    "Melee: Combat",
    "Melee: Dark Step",
    "Melee: Electric",
    "Melee: Water Kung Fu",
    "Melee: Dragon Breath",
    "Melee: Superhuman",
    "Melee: Death Step",
    "Melee: Electric Claw",
    "Melee: Sharkman Karate",
    "Melee: Dragon Talon",
    "Melee: Godhuman",
    "Melee: Sanguine Art",

    -- Swords
    "Sword: Katana",
    "Sword: Cutlass",
    "Sword: Dual Katana",
    "Sword: Iron Mace",
    "Sword: Triple Katana",
    "Sword: Dual-Headed Blade",
    "Sword: Pipe",
    "Sword: Soul Cane",
    "Sword: Bisento",
    "Sword: Shisui",
    "Sword: Wando",
    "Sword: Saddi",
    "Sword: Yama",
    "Sword: Enma",
    "Sword: Saber",
    "Sword: Midnight Blade",
    "Sword: Rengoku",
    "Sword: Canvander",
    "Sword: Buddy Sword",
    "Sword: Hallow Scythe",
    "Sword: Tushita",
    "Sword: Cursed Dual Katana",
    "Sword: Dragon Trident",
    "Sword: Longsword",
    "Sword: Twin Hooks",
    "Sword: Gravity Cane",
    "Sword: Jitte",
    "Sword: Koko",
    "Sword: Dark Blade",
    "Sword: True Triple Katana"
}
for _, weapon in ipairs(WeaponList) do
	local btn = Instance.new("TextButton", ScrollList)
	btn.Size = UDim2.new(1, -10, 0, 28)
	btn.Text = weapon
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 12
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	btn.MouseButton1Click:Connect(function()
		SelectedWeapon = weapon
		DropDownBtn.Text = "Select Weapon: " .. SelectedWeapon
		WeaponOptions.Visible = false

		-- Auto Equip
		pcall(function()
			local args = {
				[1] = "EquipWeapon",
				[2] = weapon:split(": ")[2]
			}
			game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
		end)
	end)
end

DropDownBtn.MouseButton1Click:Connect(function()
	WeaponOptions.Visible = not WeaponOptions.Visible
end)
